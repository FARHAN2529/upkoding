# Generated by Django 3.1.6 on 2021-10-24 05:01

import account.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0002_auto_20210326_1306'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='time_zone',
            field=models.CharField(choices=[('Asia/Jakarta', '(WIB) Waktu Indonesia Barat'), ('Asia/Makassar', '(WITA) Waktu Indonesia Tengah'), ('Asia/Jayapura', '(WIT) Waktu Indonesia Timur')], default='Asia/Jakarta', max_length=100),
        ),
        migrations.CreateModel(
            name='ProAccessPurchase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plan_name', models.CharField(max_length=200)),
                ('days', models.IntegerField()),
                ('price', models.IntegerField()),
                ('valid_until', models.DateTimeField(default=account.models.valid_until_time)),
                ('status', models.SmallIntegerField(choices=[(0, 'order.pending'), (1, 'order.canceled'), (2, 'order.gifted'), (10, 'payment.pending'), (11, 'payment.canceled'), (12, 'payment.paid'), (13, 'payment.expired'), (14, 'payment.refund'), (15, 'payment.failed')], default=0)),
                ('review_required', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pro_access', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='account.proaccess')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='proaccess',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pro_access', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MidtransPaymentNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payload', models.JSONField(blank=True, null=True)),
                ('payment_type', models.CharField(max_length=50)),
                ('transaction_id', models.CharField(max_length=200)),
                ('transaction_status', models.CharField(max_length=50)),
                ('fraud_status', models.CharField(blank=True, max_length=50, null=True)),
                ('status_code', models.IntegerField()),
                ('gross_amount', models.FloatField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.proaccesspurchase')),
            ],
        ),
        migrations.AddIndex(
            model_name='proaccesspurchase',
            index=models.Index(fields=['created'], name='purchase_created_idx'),
        ),
        migrations.AddIndex(
            model_name='proaccesspurchase',
            index=models.Index(fields=['status'], name='purchase_status_idx'),
        ),
        migrations.AddIndex(
            model_name='proaccesspurchase',
            index=models.Index(fields=['valid_until'], name='purchase_valid_until_idx'),
        ),
        migrations.AddIndex(
            model_name='proaccesspurchase',
            index=models.Index(fields=['review_required'], name='purchase_review_required_idx'),
        ),
    ]
